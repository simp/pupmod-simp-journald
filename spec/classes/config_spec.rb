require 'spec_helper'

describe 'journald' do
  context 'supported operating systems' do
    on_supported_os.each do |os, facts|
      context "on #{os}" do
        let(:facts) do
          facts
        end

        context 'with defaults for all parameters' do
          let(:content) {
            <<-EOF
## file generated by puppet
# See journald.conf(5) for details

[Journal]
Compress=yes
ForwardToConsole=no
ForwardToKMsg=no
ForwardToSyslog=yes
ForwardToWall=yes
MaxFileSec=1month
MaxLevelConsole=info
MaxLevelKMsg=err
MaxLevelStore=debug
MaxLevelSyslog=debug
MaxLevelWall=emerg
RateLimitBurst=10000
RateLimitInterval=30s
Seal=yes
SplitMode=login
Storage=auto
SyncIntervalSec=5m
TTYPath=/dev/console
EOF
          }

          it { should compile.with_all_deps() }
          it { should contain_class('journald::config') }
          it { should contain_file('/var/log/journal/').with({
            'ensure' => 'directory',
            'force'  => 'true',
            'owner'  => 0,
            'group'  => 'systemd-journal',
          }) }
          it { should contain_file('/etc/systemd/journald.conf').with({
            'ensure'  => 'file',
            'owner'   => 0,
            'group'   => 0,
            'content' => content
          }) }
        end

        context 'with persist_log => false' do
          let(:params) {{ :persist_log => false }}

          it { should compile.with_all_deps() }
          it { should contain_class('journald::config') }
          it { should contain_file('/var/log/journal/').with({
            'ensure' => 'absent',
            'force'  => 'true',
            'owner'  => 0,
            'group'  => 'systemd-journal',
          }) }
        end

        context 'with a hash that deviates from default' do
          let(:params) {{ :options => {'SplitMode' => 'none'} }}
          
          let(:content) {
            <<-EOF
## file generated by puppet
# See journald.conf(5) for details

[Journal]
Compress=yes
ForwardToConsole=no
ForwardToKMsg=no
ForwardToSyslog=yes
ForwardToWall=yes
MaxFileSec=1month
MaxLevelConsole=info
MaxLevelKMsg=err
MaxLevelStore=debug
MaxLevelSyslog=debug
MaxLevelWall=emerg
RateLimitBurst=10000
RateLimitInterval=30s
Seal=yes
SplitMode=none
Storage=auto
SyncIntervalSec=5m
TTYPath=/dev/console
EOF
          }

          it { should compile.with_all_deps() }
          it { should contain_class('journald::config') }
          it { should contain_file('/etc/systemd/journald.conf').with({
            'ensure'  => 'file',
            'owner'   => 0,
            'group'   => 0,
            'content' => content
          }) }
        end

      end
    end
  end
end
